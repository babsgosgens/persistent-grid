// /**
//  * Copyright (C) 2013 Crossing Hippos - Babs GÃ¶sgens. All rights reserved.
//  * Licensed under GNU General Public License version 2 or later; see LICENSE.txt
//  */
@if $trace-imports { @debug 'imported'; }


//  ==========================================================================
//  Mixin button
//  ==========================================================================
//  Accepts a string which will be used as a selector
//  Will yield content as its output
//  
//  @param $selector: a string
//  ==========================================================================
@mixin button($selector)
{
  #{$selector} {
    @content;
  }
}


//  ==========================================================================
//  Mixin button padding (placeholder for ...)
//  ==========================================================================
//  Accepts either a single value represetning all four sides, 
//  or a list of four values representing each individual side
//  
//  @param $values: a list of 1 or 4 width values or false if nothing should be compiled
//  ==========================================================================
@mixin button-padding($values: $button-padding) {
	@if $values {		
		@include sides($values, padding);
	}
}


//  ==========================================================================
//  Mixin button border (placeholder for ...)
//  ==========================================================================
//  Accepts a list of three values representing width, style and color
//  
//  @param $values: a list of properties (width, style, color) or false if nothing should be compiled
//  ==========================================================================
@mixin button-border($values: $button-border) {

	$width: nth($values,1);
	$style: nth($values,2);
	$color: nth($values,3);

	@if length($width)==1 and length($style)==1 and length($color)==1 {
		@if $values {
			@include sides(#{$values}, border);
		}
	}
	@else {
		@if $width {
			border-width: $width;
		}
		@if $style {
			border-style: $style;
		}
		@if $color {
			border-color: $color;
		}
	}
}


//  ==========================================================================
//  Mixin button border radius (placeholder for ...)
//  ==========================================================================
//  Accepts a list of up to four values representing all four corners
//  
//  @param $values: a list of width values or false if nothing should be compiled
//  ==========================================================================
@mixin button-border-radius($values: $button-corner) {

	@if $values {
		@include border-radius($values);
	}
}


//  ==========================================================================
//  Mixin button border radius (placeholder for ...)
//  ==========================================================================
//  
//  @param $background: a list of properties (background-color, background-image) or false if nothing should be compiled
//  ==========================================================================
@mixin button-background($background: $button-background) {

	@if $background {

		$background-color: nth($background,1);
		$background-image: nth($background,2);

		@if $background-color {
			background-color: $background-color;
		}
		@if $background-image {
			@include background-image($background-image);
		}
	}
}


//  ==========================================================================
//  Mixin button text (placeholder for ...)
//  ==========================================================================
//  
//  @param $text: a list of properties (color, text-shadow, text-align, text-decoration) or false if nothing should be compiled
//  ==========================================================================
@mixin button-text($text: $button-text) {

	@if $button-text {

		$text-color: nth($text,1);
		$text-decoration: nth($text,4);

		@include module-text($text);

		// Buttons are often anchor links, visited links also need to be set;
		@if $text-color {
			&:hover,
			&:active,
			&:visited {
				color: $text-color;
			}
		}

		@if $text-decoration {
			text-decoration: $text-decoration;
		}
	}
}


//  ==========================================================================
//  Mixin button text (placeholder for box-shadow)
//  ==========================================================================
//  
//  @param $shadow: a (list of) valid shadow notation(s) or false if nothing should be compiled
//  ==========================================================================
@mixin button-shadow($shadow: $button-shadow) {
	@if $shadow {
		@include box-shadow($shadow);
	}
}


//  ==========================================================================
//  Mixin button text (placeholder for font)
//  ==========================================================================
//  
//  @param $shadow: a list of properties (type, font-size, leading) or false if nothing should be compiled
//  ==========================================================================
@mixin button-type($type: $button-type) {
	@if $type {

		$type-size: nth($type,2);
		$type-rhythm: if(nth($type,3), nth($type,3), 1);

		$type: nth($type,1);

		@if $type-size and $type-size!=$font-size {
			@include adjust-font-size-to($type-size, $type-rhythm);
		}

		@if extract-type-style($type) != extract-type-style($type-default) {
			@include font-style($type);
		}

		@if extract-type-variant($type) != extract-type-variant($type-default) {
			@include font-variant($type);
		}

		@if extract-type-weight($type) != extract-type-weight($type-default) {
			@include font-weight($type);
		}

		@if extract-type-family($type) != extract-type-family($type-default) {
			@include font-family($type);
		}

	}
}