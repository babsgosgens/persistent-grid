@mixin columnBehavior($use-box-sizing: true)
{
	display: inline-block;
	margin-right: $negativeRightMargin !important;
	vertical-align: top;
	@if $use-box-sizing {
		@include box-sizing('border-box');
		padding-left: $columnPadding / 2;
		padding-right: $columnPadding / 2;
	}
}

@mixin marginsForColumns()
{
	padding-left: 0;
	padding-right: 0;
	margin-left: $columnPadding / 2;
	margin-right: $columnPadding / 2;
}
@mixin parentBehavior($pad-children: false)
{
	padding-left: 0;
	padding-right: 0;
	/* Experimental */
	@if $pad-children {
		>*:not(.col) {
			padding-left: $columnPadding / 2;
			padding-right: $columnPadding / 2;
		}
	}
}

@mixin columnWidth($fraction: 1/3, $persistent: false) {
	@if $persistent {
		width: fractionPercentage($fraction) !important;
	}
	@else {
		width: fractionPercentage($fraction);
		@if $breakpointS {
			@media screen and #{$breakpointS} {
				width: 100%;
			}
		}
	}
}

@mixin column($fraction: 1/3, $persistent: false) {
	@include columnBehavior();
	@include columnWidth($fraction, $persistent);
}

@mixin root() {
	display: block;
	margin-left: ($columnPadding/2);
	margin-right: ($columnPadding/2);
	@media screen and (max-width: 1024px) {
		margin-left: 0; margin-right: 0;
	}
	@media screen and (min-width: $containerMaxWidth + 2*$columnPadding) {
		margin-left: auto;
		margin-right: auto;
		max-width: $containerMaxWidth;
	}
}