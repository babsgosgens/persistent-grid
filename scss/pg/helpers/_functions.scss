// /**
//  * Copyright (C) 2013 Crossing Hippos - Babs GÃ¶sgens. All rights reserved.
//  * Licensed under GNU General Public License version 2 or later; see LICENSE.txt
//  */
@if $trace-imports { @debug 'imported'; }

// Placeholder function
@function vertical-rhythm($lines) 
{
	@return rhythm($lines);
}

@function horizontal-rhythm($lines) {
	@return horizontal-rhythm($lines);
}

// Consider this:
// $border-width: false;
// if($border-width, 2*$border-width, $border-width);
// the second expression will break the script because SASS is executing it regardless of whether the condition is true or false
// By wrapping it in the multiply function, this issue gets bypassed:
// if($border-width, multiply(2,$border-width), $border-width);
@function multiply($factor, $subject) {
	@if $subject==0 {
		@return 0;
	}
	@if $subject==false {
		@return 0;
	}
	@if number($subject) {
		@return $factor*$subject;
	}
}

// @function establish-size($to-size,$from-size:$base-font-size) {
// 	@if not $relative-font-sizing and $from-size != $base-font-size {
//     @warn "$relative-font-sizing is false but a relative font size was passed to adjust-font-size-to"; }
//   	$base-font-size: $font-unit * $to-size / $from-size;

//   	@return $base-font-size;
// }

// //* Calculate the optimal line-height */
// @function leading-in-px($base-font-size, $balance-over: false) {

// 	$dividend: $base-font-size / $base-line-height;
// 	$leading: $base-line-height;

// 	// For smaller font-sizes, for instance balance a font-size of 8px over two baselines of 24px in three (balance) lines resulting in 48/3=16px;
// 	@if $balance-over {
// 		$leading: 2 * $base-line-height / $balance-over;		
// 		@return $leading;
// 	}
// 	@if $dividend<0.5 {
// 		$leading: 0.5 * $base-line-height;
// 		@return $leading;
// 	}
// 	@if $dividend>1 {
// 		$leading: ceil($dividend) * $base-line-height;
// 		@if ($leading - $base-font-size) < (2 * $min-line-padding) {
// 			$leading: $leading + $base-line-height;
// 		}
// 		@return $leading;
// 	}
// 	@else {
// 		@return $leading;		
// 	}
// }

// @function px-to-rhythm($value) {
// 	@return $value/$base-line-height;
// }

// @function base-line-rhythm($base-lines: 1) {
// 	// @debug $base-lines;
// 	// @debug $base-line-height;
// 	@return ($base-lines * $base-line-height);
// }

@function px-to-em($target,$context)
{
	@return $target/$context*1em;
}
@function px-to-percentage($target,$context)
{
	@return $target/$context*100%;
}
@function px-to-rem($pixels)
{
	@return $pixels/1px*0.1rem;
}